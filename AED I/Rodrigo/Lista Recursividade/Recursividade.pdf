1.
# include <stdio.h>

int MDCI(), MDCR(), maior = 0;

int main(void){
    int opcao, n1, n2;

    puts("Programa para achar o MDC de um numero de forma iterativa ou recursiva");
    puts("Digite 1 para Iterativa e 2 para recursiva");
    scanf("%d", &opcao);
    printf("Digite o valor do n1: ");
    scanf("%d", &n1);
    printf("Digite o valor do n2: ");
    scanf("%d", &n2);

    switch(opcao){
        case(1):
            printf("O maximo divisor comum = %d", MDCI(n1, n2));
            break;

        case(2):
            printf("O maximo divisor comum = %d", MDCR(n1 ,n2, 1));
            break;
    }

    return 0;
}

int MDCI(int n1, int n2){
    int maior = 0;
    if (n1 > n2){
        for (int i = 1; i <= n1; i++){
            if(n1 % i == 0 && n2 % i == 0 && i > maior)
                maior = i;
        }
    }
    else{
        for (int i = 1; i <= n2; i++){
            if(n1 % i == 0 && n2 % i == 0 && i > maior)
                maior = i;
        }
    }
    return maior;
}

int MDCR(int n1, int n2, int i){
    if(n1 % i == 0 && n2 % i == 0 && i > maior)
        maior = i;
    if (n1 < i)
        return maior;
    else{
        return MDCR(n1, n2, i + 1);
    }
    }

2.
# include <stdio.h>
# include <string.h>

int digitos(), i = 0, qtd = 0;

int main(void){
    char num[100], digit;

    puts("Programa para calcular quantos digitos em determinado numero\n");
    puts("Digite o valor do numero: ");
    fgets(num, 100, stdin);
    puts("Digite o valor do digito");
    scanf(" %c", &digit);

    printf("A quantidade de digitos no numero = %d", digitos(num, digit, i));
}

int digitos(char num[], int digit, int i){
    if(i > strlen(num))
        return qtd;
    else{
        if (num[i] == digit){
            qtd++;
        }
        return digitos(num, digit, i+1);
    }
        
}

3.
# include <stdio.h>

int mod();

int main(void){
    int x, y;

    puts("Programa que faz mod.");
    printf("\nDigite o valor do x: ");
    scanf("%d", &x);
    printf("\nDigite o valor do y: ");
    scanf("%d", &y);

    printf("%d", mod(x, y));
}

int mod(int x, int y){
    if(x > y){
        return mod(x - y, y);
    }
    if(x < y){
        return x;
    }

    if(x == y){
        return 0;
    }
}

4.
# include <stdio.h>

int multip(), multipp(), multi = 1, i = 1;

int main(void){
    int n1, n2;

    puts("Programa para multiplicar recursivamente");

    puts("\nDigite o valor do n1: ");
    scanf("%d", &n1);
    puts("Digite o valor do n2: ");
    scanf("%d", &n2);

    printf("%d", multipp(n1, n2));

    return 0;
}

int multip(int n1, int n2){
    if (n1 > n2){
        return multi;
    }
    else{
        multi *= n1;
        return multip(n1+1, n2);
    }
}

int multipp(int n1, int n2){
    if (i > n2){
        return multi - 1;
    }
    else{
        multi = multi + n1;
        i++;
        return multipp(n1, n2);
    }
}

5.
#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

void apresentacao()
{
    printf("Programa para resolver o probelma da Torre de Hanoi");
}

int lerN()
{
    int a;
    bool erro;
    do
    {
        printf("\nDigite a quantidade de discos a serem movidos: ");
        scanf("%d", &a);
        erro = a <= 0;
        if(erro)
        {
            printf("\nValor invalido!\a");
        }
    }while(erro);
    return a;
}

int pinoI()
{
    int b;
    printf("\nDigite em qual pino os discos estao colocados incialmente: ");
    scanf("%d", &b);
    return b;
}

int pinoF()
{
    int c;
    printf("\nDigite em qual pino essa pilha de discos deve ser movida: ");
    scanf("%d", &c);
    return c;
}

int pinoT()
{
    int d;
    printf("\nDigite o pino que sera a area de armazenamento temporario:");
    scanf("%d", &d);
    return d;
}

void torreH(int n, int x, int y, int z)
{
    if(n == 1)
    {
      printf("\n%d ==> %d", x, y);
      return;
    }

    torreH(n - 1, x, z, y);
    printf("\n%d ==> %d", x, y);

    torreH(n - 1, z, y, x); 
}

int main()
{
    apresentacao();

    int w = lerN();
    int x = pinoI();
    int y = pinoF();
    int z = pinoT();

    torreH(w, x, y, z);

}